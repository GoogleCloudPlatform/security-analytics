/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
  type: "incremental",
  tags: ["summary", "daily"],
  uniqueKey: ["day", "principal_email"],
  bigquery: {
    partitionBy: "day",
    updatePartitionFilter:
      "day >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)",
    clusterBy: ["principal_email"]
  }
}

pre_operations {
  DECLARE time_window_checkpoint DEFAULT (
    ${when(incremental(),
    `SELECT CAST(MAX(day) AS TIMESTAMP) FROM ${self()}`,
    `SELECT TIMESTAMP("2000-01-01")`)}
  )
}

SELECT
  EXTRACT(DATE FROM timestamp) AS day,
  proto_payload.audit_log.authentication_info.principal_email as principal_email,
  SUM(CAST(JSON_VALUE(
    proto_payload.audit_log.metadata.jobChange.job.jobStats.queryStats.totalBilledBytes
  ) AS INT64))/POWER(2, 40) AS total_billed_TB,
  COUNT(*) AS counter
FROM
  ${ref("_AllLogs")}
WHERE
  ${ when(incremental(), `timestamp >= time_window_checkpoint AND`) }
  timestamp >=  TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL ${dataform.projectConfig.vars.summary_lookback_days} DAY)
  AND log_id = "cloudaudit.googleapis.com/data_access"
  AND JSON_VALUE(proto_payload.audit_log.metadata.jobChange.job.jobConfig.type) = "QUERY"
  AND (proto_payload.audit_log.method_name = "google.cloud.bigquery.v2.JobService.InsertJob" OR
       proto_payload.audit_log.method_name = "google.cloud.bigquery.v2.JobService.Query")
GROUP BY
  day,
  principal_email
