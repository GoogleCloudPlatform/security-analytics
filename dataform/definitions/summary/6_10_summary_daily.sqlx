/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
  type: "incremental",
  tags: ["summary", "daily"],
  uniqueKey: ["day", "src_ip"],
  bigquery: {
    partitionBy: "day",
    updatePartitionFilter:
      "day >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)",
    clusterBy: ["src_ip"]
  }
}

pre_operations {
  DECLARE time_window_checkpoint DEFAULT (
    ${when(incremental(),
    `SELECT CAST(MAX(day) AS TIMESTAMP) FROM ${self()}`,
    `SELECT TIMESTAMP("2000-01-01")`)}
  )
}

SELECT
  EXTRACT(DATE FROM timestamp) AS day,
  JSON_VALUE(json_payload.connection.src_ip) as src_ip,
  -- TIMESTAMP supports up to 6 digits of fractional precision, so drop any more digits to avoid parse errors
  MIN(TIMESTAMP(REGEXP_REPLACE(JSON_VALUE(json_payload.start_time), r'\.(\d{0,6})\d+(Z)?$', '.\\1\\2'))) AS first_seen,
  MAX(TIMESTAMP(REGEXP_REPLACE(JSON_VALUE(json_payload.start_time), r'\.(\d{0,6})\d+(Z)?$', '.\\1\\2'))) AS last_seen,
  ARRAY_AGG(DISTINCT JSON_VALUE(resource.labels.subnetwork_name)) as subnetwork_names,
  ARRAY_AGG(DISTINCT JSON_VALUE(json_payload.dest_instance.vm_name)) as vm_names,
  COUNT(*) counter
FROM ${ref("_AllLogs")}
WHERE
  ${ when(incremental(), `timestamp >= time_window_checkpoint AND`) }
  timestamp >=  TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL ${dataform.projectConfig.vars.summary_lookback_days} DAY)
  AND JSON_VALUE(json_payload.reporter) = 'DEST'
  -- AND JSON_VALUE(resource.labels.subnetwork_name) IN ('prod-customer-data')
GROUP BY
  day, src_ip
