/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
  type: "view",
  description: "cloud_storage_object_accessed_from_new_IP",
  tags: ["alert"],
}

SELECT
  *
FROM (
  WITH actions AS (
    SELECT
      COALESCE(proto_payload.audit_log.request_metadata.caller_ip, 'unknown') as caller_ip,
      MIN(timestamp) AS first_seen,
      MAX(timestamp) AS last_seen,
      ARRAY_AGG(DISTINCT proto_payload.audit_log.authentication_info.principal_email IGNORE NULLS) as principal_emails,
      ARRAY_AGG(DISTINCT proto_payload.audit_log.method_name IGNORE NULLS) as method_names,
      ARRAY_AGG(DISTINCT COALESCE(proto_payload.audit_log.resource_name, 'ALL')) as resource_names,
      ARRAY_AGG(DISTINCT proto_payload.audit_log.request_metadata.caller_supplied_user_agent IGNORE NULLS) as user_agents,
      COUNT(*) counter
    FROM ${ref("_AllLogs")}
    WHERE
      timestamp >=  TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL ${dataform.projectConfig.vars.alert_interval_minutes} MINUTE)
      AND log_id = "cloudaudit.googleapis.com/data_access"
      AND proto_payload.audit_log.service_name = 'storage.googleapis.com'
      AND proto_payload.audit_log.request_metadata.caller_ip IS NOT NULL
      AND proto_payload.audit_log.authentication_info.principal_email NOT IN (
        -- Actor exclusions
        "service-account-123456@developer.gserviceaccount.com",
        "user@example.com"
      )
      AND (proto_payload.audit_log.resource_name NOT IN (
        -- Resource (bucket) exclusions
        "projects/_/buckets/non-sensitive-bucket"
      ) OR proto_payload.audit_log.resource_name IS NULL)
    GROUP BY
      caller_ip
    ORDER BY
      last_seen DESC
  )
  SELECT
    st.* EXCEPT(first_seen, last_seen),
    -- flag any new never-seen-before IP
    lt.first_seen IS NULL AS is_new,
    -- retrieve all-time first instance from historical lookup table
    IF(lt.first_seen IS NULL, st.first_seen, lt.first_seen) AS first_seen,
    -- retrieve all-time last instance from current raw table
    st.last_seen
  FROM actions st
  LEFT JOIN ${ref("csa_5_31_ips_lookup")} lt USING(caller_ip)
)
WHERE is_new
