# <%= detection['id'] %> - <%= detection['display_name'] -%>

<%= detection['description'] %>

**Category:** <%= detection['category'] %>
</br>
**Use Cases:** <%= detection['use_cases'].join(', ') %>
</br>
**Data Sources:** <%= detection['sources'].join(', ') %>
</br>
<%- if detection['authors'] != nil -%>
**Authors:** <%= detection['authors'].join(', ') %>
<%- end -%>

<%def generate_query_links(query_paths, backend)
    links = query_paths[backend].map do |language, path|
        languageDisplayName = case language
            when 'yaral' then 'YARA-L'
            else language.upcase
        end
        "[#{languageDisplayName}](#{path})"
    end.join(", ")
    if links.empty?
        return "[Contribute " + (backend == 'chronicle' ? 'rule' : 'query') + "](../../CONTRIBUTING.md)"
    else
        return links
    end
end%>

## Queries or Rules
BigQuery  | Log Analytics | Google SecOps
--- | --- | ---
<%= generate_query_links(query_paths, 'bigquery') %> | <%= generate_query_links(query_paths, 'log_analytics') %> | <%= generate_query_links(query_paths, 'chronicle') %>

## Event Generation
<%- if detection['test'] != nil -%>

<%= detection['test']['description'] %>

<%def cleanup(input)
    input.to_s.strip.gsub(/\\/,"&#92;")
end%>

<% if detection['test']['prerequisites'].to_a.count > 0 %>
### Test Prerequisites
<% detection['test']['prerequisites'].each_with_index do |prereq, index| -%>
1. <%= prereq['link'] != nil ? "[#{prereq['title']}](#{prereq['link']})" : "#{prereq['title']}" %>
<% end -%>
<% end -%>

<% if detection['test']['arguments'].to_a.count > 0 %>
### Test Input
| Name | Description | Type | Default Value |
|------|-------------|------|---------------|
<% detection['test']['arguments'].each do |arg_name, arg_options| -%>
| <%= cleanup(arg_name) %> | <%= cleanup(arg_options['description']) %> | <%= cleanup(arg_options['type']) %> | <%= cleanup(arg_options['default']) %>|
<% end -%>
<% end -%>

<%- if detection['test']['command'] != nil -%>
### Test Commands
```
<%= detection['test']['command'].to_s.strip %>
```
<%- end -%>

<%- if detection['test']['cleanup_command'] != nil -%>
### Cleanup Commands:
```
<%= detection['test']['cleanup_command'].to_s.strip %>
```
<%- end -%>

<% else -%>
No event generation steps provided. [Contribute emulation test](../../CONTRIBUTING.md) to this use case.
<%- end -%>

## Sample Event
<% if samples.count > 0 %>

<% samples.each do |sample| -%>
### <%= sample['title'] %>
```
<%= JSON.pretty_generate(sample['payload']) %>
```
<% end -%>

<% else -%>
No log samples provided. [Contribute log samples](../../CONTRIBUTING.md) to this use case.
<% end -%>

<% if detection['references'] != nil and detection['references'].count > 0 %>
### References
<% detection['references'].each do |reference| -%>
- <%= reference %>
<% end -%>    
<% end -%>